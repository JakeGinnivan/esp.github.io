{"name":"Evented State Processor (ESP)","tagline":"","body":"# Evented State Processor (ESP)\r\n\r\nESP adds specific processing workflow around changes to a model's state. \r\nIt takes ownership of a single root model.\r\nThose interested in observing the model's state observe a stream of events from a `Router`.\r\nThose wanting to change a model's state can publish events to the `Router`. \r\nThe `Router` routes events to `EventProcessors` responsible for applying the new state using a state processing workflow. \r\nOnce the workflow is done, the `Router` dispatches the most recent model version to all model observers.\r\n\r\nImplementations:\r\n* [esp-js](https://github.com/esp/esp-js)\r\n* [esp-net](https://github.com/esp/esp-net)\r\n\r\nPlease refer to the [esp-js](https://github.com/esp/esp-js) for current documentation. [esp-net](https://github.com/esp/esp-net) API is very similar (soon both APIs will merge). \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}